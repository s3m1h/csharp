<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAGJJREFUWEft
        jkEKwCAMBEO/mc/k5W1F4qUIqTVFDzOwEIVdRgC2RFWvP+LzMb1yRnw+ZrgQgAACCCCAAALTAuU+299I
        zOzwfn3XsTc8C+VeKzALAp8FsuPzMb1yRnweYCdEbhk6htLSYUlLAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAQ5JREFUWEft
        k1sKwkAMRYsuQEQRxU3pRz/6pCD4449LKLg6QQRBFFyLoveWUKqO4yuKwhwI7SRtczpNPYfj58jzvBZF
        0fEDcZAWdn5J4LEb7vD085yA7QbkJmmatmR5RZIknTiOB7IsUBPAeso8GixNEmyO+hqxRwwlrScQhmET
        uYXUthDpScmDUB+5ndTmvu83pKQnQEwStuZEVYBkWdZFbcNr+Dlw5LbzfBUEQVsuK1EXIFUJxq3m5CMC
        F9vOOJuJKuoClWkv3hzH8nOY/g5VAdPA2f4OoiZgm3abhJoA1jPmue2mgasOJoRGktYTwBvX0Ty/Ne2E
        Emg+lmWBmsCrOIF3BLTjTwQcju/ieSf4/R22l/jvnQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HhH3zsWoAAAAAElFTkSuQmCC
</value>
  </data>
</root>